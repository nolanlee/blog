(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{280:function(e,t,r){"use strict";r.r(t);var _=r(5),l=Object(_.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"用够酷的jekyll搭建够酷的博客"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#用够酷的jekyll搭建够酷的博客","aria-hidden":"true"}},[e._v("#")]),e._v(" 用够酷的Jekyll搭建够酷的博客")]),e._v(" "),r("p",[e._v("Hey，如果你想快速地开发一个够酷够独特的博客网站，可是不会用内容管理系统；或者不想使用免费的但是因各种限制而体验糟糕的博客托管平台；又或者像我一样是个专注于前端，对后端开发和数据库一头雾水的程序员，那么你一定要了解接下来我要介绍的这个简洁的，面向博客的静态页面生成引擎 "),r("a",{attrs:{href:"http://jekyllrb.com/",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("Jekyll")]),r("OutboundLink")],1),e._v(" 以及 "),r("a",{attrs:{href:"http://pages.github.com/",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("Github Pages")]),r("OutboundLink")],1),e._v(" 服务。")]),e._v(" "),r("h2",{attrs:{id:"什么是jekyll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是jekyll","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是Jekyll")]),e._v(" "),r("p",[e._v("Jekyll是由Github创始人"),r("a",{attrs:{href:"http://tom.preston-werner.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tom Preston-Werner"),r("OutboundLink")],1),e._v(' 在2008年发起的一个开源项目。这个项目的目的，引用作者的话话来说，"'),r("a",{attrs:{href:"http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Blogging Like a Hacker"),r("OutboundLink")],1),e._v(' (像黑客一样写博客)"。有没有一种不明觉厉的酷毙了的感觉?!')]),e._v(" "),r("p",[e._v("简单来说，Jekyll的作用是将页面布局，博客文章根据一定规则整合在一起生成一个静态的博客网站。它相比于WordPress之类的需要通过后端PHP动态生成博客的系统来说有以下几个优势：")]),e._v(" "),r("p",[e._v("###加载速度快\n后端无需执行代码，直接将静态文件返回客户端即可。")]),e._v(" "),r("p",[e._v("###容易部署和维护\n由Jekyll生成的静态页面工程就是一个简单的文件目录系统，我们只需要把这些静态文件上传到任何web服务器即可，不需要在服务器上部署类似于LAMP这样笨重复杂的环境。")]),e._v(" "),r("p",[e._v("###Hacker一般的文本编辑\n如果你像我一样烦透了那些体验糟糕的在线文本编辑器，那么在Jekyll下，无论是vim，sublime还是别的什么新玩意儿，你可以使用任何你喜欢和擅长的文本编辑器。不但如此，你还可以使用Markdown，Liquid和HTML来排版。")]),e._v(" "),r("h2",{attrs:{id:"安装jekyll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装jekyll","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装Jekyll")]),e._v(" "),r("p",[e._v("由于Jekyll是用Ruby开发的，所以安装Jekyll需要Ruby环境才能像Jekyll官网说的 “Get up and running in seconds”。")]),e._v(" "),r("p",[e._v("在"),r("strong",[e._v("Windows")]),e._v("下，下载并安装 "),r("a",{attrs:{href:"http://rubyinstaller.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RubyInstaller"),r("OutboundLink")],1),e._v(" 一键搭建Ruby环境  (注意在安装步骤里在 "),r("code",[e._v("Add Ruby executables to your PATH")]),e._v(" 前面打钩，它会自动将ruby添加到系统变量PATH里) 。然后下载并解压 "),r("a",{attrs:{href:"http://rubyinstaller.org/downloads/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Development Kit"),r("OutboundLink")],1),e._v("，在之前解压的路径下，运行 "),r("code",[e._v("ruby dk.rb init")]),e._v(" 和 "),r("code",[e._v("ruby dk.rb install")]),e._v(" 安装 Development-Kit。")]),e._v(" "),r("p",[e._v("如果是"),r("strong",[e._v("Mac OS")]),e._v("或者"),r("strong",[e._v("Linux")]),e._v("环境下，可以参考 "),r("a",{attrs:{href:"http://ruby-china.org/wiki/install_ruby_guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("《如何快速正确的安装 Ruby, Rails 运行环境》"),r("OutboundLink")],1),e._v(" 一文，里面介绍的很详细。")]),e._v(" "),r("p",[e._v("由于国内网络原因，需要更改Gem源。请参考 "),r("a",{attrs:{href:"http://ruby.taobao.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("《更改 Ruby Gem 镜像》"),r("OutboundLink")],1),e._v(" 。")]),e._v(" "),r("p",[e._v("Ruby环境搭建完后，打开控制台输入命令 "),r("code",[e._v("gem install jekyll")]),e._v(" (Linux或者Mac OS可能需要在前面加 "),r("code",[e._v("sudo")]),e._v(" 通过管理员权限安装)。")]),e._v(" "),r("p",[e._v("(如果你到这里还没有搭建成功Jekyll环境，并且内心已经被一万头草泥马践踏而过，请在全部阅读完以后联系我！)")]),e._v(" "),r("h2",{attrs:{id:"用jekyll搭建一个简单的博客"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#用jekyll搭建一个简单的博客","aria-hidden":"true"}},[e._v("#")]),e._v(" 用Jekyll搭建一个简单的博客")]),e._v(" "),r("p",[e._v("打开终端，输入 "),r("code",[e._v("jekyll new myblog")]),e._v(" 。这样Jekyll会在当前目录下生成一个"),r("em",[e._v("Hello World")]),e._v("式的简单Jekyll系统。输入"),r("code",[e._v("cd myblog")]),e._v(" 和 "),r("code",[e._v("jekyll server")]),e._v(" 启动这个系统。在浏览器地址栏输入 "),r("code",[e._v("localhost：4000")]),e._v(" 来打开myblog网站，如下图所示：")]),e._v(" "),r("img",{attrs:{src:e.$withBase("/images/simple-blog.webp"),alt:"myblog-snipshot"}}),e._v(" "),r("p",[e._v("没错，现在已经可以用这个简单的系统来开始写你的博客啦！\n下面是这个Jekyll系统的目录结构：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("——_layouts\n |——default.html\n |——post.html\n——_posts\n |——2014-02-31-welcome-to-jekyll.markdown\n——_site\n——css\n |——main.css\n |——syntax.css\n——.gitignore\n——_config.yml\n——index.html\n")])])]),r("p",[e._v("###_layouts目录正如它的名字一样，存放一些用于布局的HTML文件")]),e._v(" "),r("p",[e._v("在每个layout文件里都应该添加 "),r("code",[e._v(e._s("{{")+" content }}")]),e._v(" 占位符。这个占位符是"),r("a",{attrs:{href:"https://github.com/Shopify/liquid",target:"_blank",rel:"noopener noreferrer"}},[e._v("Liquid"),r("OutboundLink")],1),e._v(" (一个Ruby支持的模板语言) 表达式。当你的某个页面引用这个layout时，这个页面就会填充到 "),r("code",[e._v(e._s("{{")+" content }}")]),e._v(" 当中。Jekyll所有的页面，无论是html还是markdown，都支持Liquid表达式。在 "),r("code",[e._v("default.html")]),e._v(" 和 "),r("code",[e._v("post.html")]),e._v(" 里面还可以看到类似于 "),r("code",[e._v(e._s("{{")+" page.title }}")]),e._v(" 的Liquid表达式，这些都是Jekyll预定义的一些变量，这些变量的具体描述可以参考 "),r("a",{attrs:{href:"http://jekyllrb.com/docs/variables/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jekyll 预定义变量"),r("OutboundLink")],1),e._v(" 的具体描述。")]),e._v(" "),r("p",[e._v("###_posts目录就是存放我们博客文章的地方")]),e._v(" "),r("p",[e._v("文章的文件名需要遵循 "),r("code",[e._v("年-月-日-文章简称")]),e._v(" 的格式，否则Jekyll在build的时候会忽略那些非法命名的文件甚至build失败。"),r("code",[e._v("_post")]),e._v("里的文件格式支持"),r("code",[e._v("html")]),e._v("和"),r("code",[e._v("markdown")]),e._v("。")]),e._v(" "),r("p",[e._v("###_site目录以及里面的内容由jekyll build时候生产，我们不用理会。")]),e._v(" "),r("p",[e._v("###css目录存放博客所需要的样式表")]),e._v(" "),r("p",[e._v("类似的我们也可以建立存放js，image等文件的文件夹。")]),e._v(" "),r("p",[e._v("###.gitignore存放git需要忽略的目录或文件，里面的默认值为_site。")]),e._v(" "),r("p",[e._v("###_config.yml是当前博客项目的配置文件")]),e._v(" "),r("p",[e._v("里面可以配置一些全局变量和所需要的插件。在我们当前这个myblog项目的配置文件里面配置了博客的名字，markdown解析器 "),r("code",[e._v("redcarpet")]),e._v(" 和语法高亮工具 "),r("code",[e._v("pygments")]),e._v("。")]),e._v(" "),r("p",[e._v("###index.html就是博客的首页了")]),e._v(" "),r("p",[e._v("当我们在浏览器访问根域名时，Jekyll会帮我们自动跳转到index.html页面。")]),e._v(" "),r("h2",{attrs:{id:"新建博文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新建博文","aria-hidden":"true"}},[e._v("#")]),e._v(" 新建博文")]),e._v(" "),r("p",[e._v("正如上文说的，新建的博文需要放在**_post**目录里面，并且以"),r("code",[e._v("年-月-日-文章简称")]),e._v("的格式命名文件。这里给大家留个小问题，如果命名为"),r("code",[e._v("2013-2-30-ValidDate.md")]),e._v("，然后输入"),r("code",[e._v("jekyll build")]),e._v("会发生什么?如果命名为"),r("code",[e._v("2013-13-30-InvalidDate.md")]),e._v("又会怎样?")]),e._v(" "),r("p",[e._v("在每篇博文前面都有一个可选的"),r("a",{attrs:{href:"http://zh.wikipedia.org/zh-cn/YAML",target:"_blank",rel:"noopener noreferrer"}},[e._v("YAML"),r("OutboundLink")],1),e._v("(JSON的超集)格式的配置项，如下所示。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('---\nlayout: post\ntitle:  "Welcome to Jekyll!"\ndate:   2014-03-31 09:22:24\ncategories: jekyll update\n---\n')])])]),r("p",[e._v("其中Jekyll预定义了一些字段， 除了上面例子列举的"),r("code",[e._v("layout")]),e._v("，"),r("code",[e._v("date")]),e._v("，"),r("code",[e._v("categories")]),e._v("之外，还有比如"),r("code",[e._v("permalink")]),e._v("，"),r("code",[e._v("published")]),e._v("，"),r("code",[e._v("tags")]),e._v("等，具体描述请参考"),r("a",{attrs:{href:"http://jekyllrb.com/docs/frontmatter/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),r("OutboundLink")],1),e._v("。上面例子中"),r("code",[e._v("title")]),e._v("变量并不是Jekyll预定义的，所以用户也可以在其中自定义一些变量，然后通过Liquid表达式 "),r("code",[e._v(e._s("{{")+" page.title }}")]),e._v(" 来引用。\n最后，在配置项下面可以尽情挥洒笔墨来撰写博文了。")]),e._v(" "),r("h2",{attrs:{id:"配置github-page"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置github-page","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置Github Page")]),e._v(" "),r("p",[e._v("上面介绍过搭建Jekyll运行环境的内容，但我猜懒懒的你一定还是嫌麻烦--怎么又是"),r("code",[e._v("Ruby")]),e._v("又是"),r("code",[e._v("Gem")]),e._v("的，还可能有什么网络问题，这不是坑爹嘛。莫急莫急，Github Page已经帮你搞定这一切啦，并且它还可以提供独立的二级域名，更重要的，它是免！费！的！")]),e._v(" "),r("p",[e._v("首先你需要在"),r("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github"),r("OutboundLink")],1),e._v("注册一个账号。然后在"),r("a",{attrs:{href:"https://github.com/new",target:"_blank",rel:"noopener noreferrer"}},[e._v("Create a new repository(新建仓库)"),r("OutboundLink")],1),e._v("页面的Repository name(仓库名)一栏填写"),r("code",[e._v("账号名.github.io")]),e._v("。点击下面的按钮"),r("code",[e._v("Create repository")]),e._v("完成创建。")]),e._v(" "),r("p",[e._v("然后把本地的Jekyll工程利用本地Git或Github工具"),r("code",[e._v("push")]),e._v("到该repository里。大概十分钟的build时间，你就可以在"),r("code",[e._v("账号名.github.io")]),e._v("访问自己的博客了。(本文不作Git的用法介绍，具体使用方法可以参考"),r("a",{attrs:{href:"http://git-scm.com/documentation",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),r("OutboundLink")],1),e._v(")。")]),e._v(" "),r("p",[e._v("##最后")]),e._v(" "),r("p",[e._v("如果你还意犹未尽，并蠢蠢欲动的要搭建自己的博客，那就赶紧行动吧。也敬请期待后面Jekyll更多功能介绍的文章。")]),e._v(" "),r("p",[r("strong",[e._v("明天太晚，只争朝夕")]),e._v("。")]),e._v(" "),r("p",[r("em",[e._v("借此感谢 Jekyll 和 Github，感谢Tom Preston-Werner。")])])])}),[],!1,null,null,null);t.default=l.exports}}]);